import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.a10e78c8.js";const p="/vue3-tools-docs/image-1.png",o="/vue3-tools-docs/image-2.png",e="/vue3-tools-docs/image-3.png",t="/vue3-tools-docs/image-4.png",c="/vue3-tools-docs/image-5.png",r="/vue3-tools-docs/image-6.png",i="/vue3-tools-docs/image-7.png",q=JSON.parse('{"title":"你的 Loading","description":"","frontmatter":{},"headers":[],"relativePath":"vue3-loading-plug.md","filePath":"vue3-loading-plug.md","lastUpdated":1745835919000}'),E={name:"vue3-loading-plug.md"},y=l(`<h1 id="你的-loading" tabindex="-1">你的 Loading <a class="header-anchor" href="#你的-loading" aria-label="Permalink to &quot;你的 Loading&quot;">​</a></h1><blockquote><p>开箱即可用的 loading，说明：vue3-loading 是一个方便在 Vue 3 项目中使用的加载指 示器组件的 npm 插件。它允许您轻松地在项目中添加加载动画，提升用户体验 。<a href="https://www.npmjs.com/package/vue3-loading-plug" target="_blank" rel="noreferrer">npm</a></p></blockquote><h2 id="🤖-安装" tabindex="-1">🤖 安装 <a class="header-anchor" href="#🤖-安装" aria-label="Permalink to &quot;🤖 安装&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install vue3</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">loading</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">plug</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install vue3</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">loading</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">plug</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pnpm install vue3</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">loading</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">plug</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pnpm install vue3</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">loading</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">plug</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="🛹-简介苍白请-您移步文档" tabindex="-1">🛹 简介苍白请 您移步文档： <a class="header-anchor" href="#🛹-简介苍白请-您移步文档" aria-label="Permalink to &quot;🛹 简介苍白请 您移步文档：&quot;">​</a></h2><p><a href="https://huo-zai-feng-lang-li.github.io/Vue3-template/#/monitoringView" target="_blank" rel="noreferrer">项目演示</a><br></p><ul><li>Tips: 尝试 **<em>刷新页面</em>**在切换路由 会自动随机的展示七种 loading 效果</li></ul><h2 id="✈️-使用方法" tabindex="-1">✈️ 使用方法 <a class="header-anchor" href="#✈️-使用方法" aria-label="Permalink to &quot;✈️ 使用方法&quot;">​</a></h2><ul><li>📒 说明：</li></ul><blockquote><p>内置两大类 loading 【可自行配置】</p><p>​ 一、<code>Loading</code> 是 大 loading 可以用于刷新项目页面、路由跳转 。在路由中引入一 次 即可全局生效，极简配置</p><p>​ 二、<code>smallLoading</code> 是小圆圈带加载进度 loading，一般用于接口请求展示。可以请 求拦截器中开启，全局接口生效，极简配置</p></blockquote><p>在你的主应用程序入口文件（例如 main.js）中，导入并使用 loading ：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Loading </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue3-loading-plug&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(Loading).</span><span style="color:#B392F0;">mount</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#app&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Loading </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue3-loading-plug&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(Loading).</span><span style="color:#6F42C1;">mount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#app&quot;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>🤖 高级用法</li></ul><h3 id="🛠️-配置-loading-类型" tabindex="-1">🛠️ 配置 loading 类型 <a class="header-anchor" href="#🛠️-配置-loading-类型" aria-label="Permalink to &quot;🛠️ 配置 loading 类型&quot;">​</a></h3><blockquote><p>你可以在安装插件时传入一个配置对象。<br> 这个配置对象有一个 <code>loadingType</code> 属 性，这个属性决定了使用哪种类型的 loading 组件。<br> 如果你不传入 loadingType，那么将会<strong>随机</strong>选择一个 loading 组件。</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(Loading, {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  loadingType: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 使用第二种类型的loading组件</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(Loading, {</span></span>
<span class="line highlighted"><span style="color:#24292E;">  loadingType: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 使用第二种类型的loading组件</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="🎲-定制-loading-色彩" tabindex="-1">🎲 定制 loading 色彩 <a class="header-anchor" href="#🎲-定制-loading-色彩" aria-label="Permalink to &quot;🎲 定制 loading 色彩&quot;">​</a></h3><ul><li><p>我们目前更新了 7 款 loading 组件，每一款都有自己的默认颜色,也可以如下自定制。</p><blockquote><p>这个配置对象还有一个 <code>customized</code> 属性，这个属性的值决定了 loading 组件的颜 色展示和遮罩的色彩呈现。（它们都是非必填） <img src="`+p+'" alt="Alt text1"></p></blockquote><blockquote><p><img src="'+o+'" alt="Alt text2"></p></blockquote><blockquote><p><img src="'+e+'" alt="Alt text3"></p></blockquote><blockquote><p><img src="'+t+'" alt="Alt text4"></p></blockquote><blockquote><p><img src="'+c+'" alt="Alt text5"></p></blockquote><blockquote><p><img src="'+r+'" alt="Alt text6"></p></blockquote><blockquote><p><img src="'+i+`" alt="Alt text7"></p></blockquote></li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(Loading, {</span></span>
<span class="line"><span style="color:#E1E4E8;">	loadingType: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	customized: {top: </span><span style="color:#9ECBFF;">&quot;#54038a&quot;</span><span style="color:#E1E4E8;">,left: </span><span style="color:#9ECBFF;">&quot;#05b631&quot;</span><span style="color:#E1E4E8;">,right: </span><span style="color:#9ECBFF;">&quot;#eeaff7&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(Loading, {</span></span>
<span class="line"><span style="color:#24292E;">	loadingType: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">	customized: {top: </span><span style="color:#032F62;">&quot;#54038a&quot;</span><span style="color:#24292E;">,left: </span><span style="color:#032F62;">&quot;#05b631&quot;</span><span style="color:#24292E;">,right: </span><span style="color:#032F62;">&quot;#eeaff7&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(Loading, {</span></span>
<span class="line"><span style="color:#E1E4E8;">	loadingType: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">	 我定制了loading颜色为红色、遮罩层为绿色</span></span>
<span class="line"><span style="color:#6A737D;">	 通常我们不需要定制mask、loading ，颜色都具备默认值</span></span>
<span class="line"><span style="color:#6A737D;">	*/</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	customized: { color: </span><span style="color:#9ECBFF;">&quot;red&quot;</span><span style="color:#E1E4E8;">, mask: </span><span style="color:#9ECBFF;">&quot;green&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(Loading, {</span></span>
<span class="line"><span style="color:#24292E;">	loadingType: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">	 我定制了loading颜色为红色、遮罩层为绿色</span></span>
<span class="line"><span style="color:#6A737D;">	 通常我们不需要定制mask、loading ，颜色都具备默认值</span></span>
<span class="line"><span style="color:#6A737D;">	*/</span></span>
<span class="line highlighted"><span style="color:#24292E;">	customized: { color: </span><span style="color:#032F62;">&quot;red&quot;</span><span style="color:#24292E;">, mask: </span><span style="color:#032F62;">&quot;green&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(Loading, {</span></span>
<span class="line"><span style="color:#E1E4E8;">	loadingType: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	customized: { mask: </span><span style="color:#9ECBFF;">&quot;rgba(126, 128, 117, 0.5)&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(Loading, {</span></span>
<span class="line"><span style="color:#24292E;">	loadingType: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">	customized: { mask: </span><span style="color:#032F62;">&quot;rgba(126, 128, 117, 0.5)&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(Loading, {</span></span>
<span class="line"><span style="color:#E1E4E8;">	loadingType: </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	customized: { ball: </span><span style="color:#9ECBFF;">&quot;red&quot;</span><span style="color:#E1E4E8;">, dot: </span><span style="color:#9ECBFF;">&quot;#fff&quot;</span><span style="color:#E1E4E8;">, bar: </span><span style="color:#9ECBFF;">&quot;#000&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(Loading, {</span></span>
<span class="line"><span style="color:#24292E;">	loadingType: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">	customized: { ball: </span><span style="color:#032F62;">&quot;red&quot;</span><span style="color:#24292E;">, dot: </span><span style="color:#032F62;">&quot;#fff&quot;</span><span style="color:#24292E;">, bar: </span><span style="color:#032F62;">&quot;#000&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(Loading, {</span></span>
<span class="line"><span style="color:#E1E4E8;">	loadingType: </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	customized: { color: </span><span style="color:#9ECBFF;">&quot;#f4038a&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(Loading, {</span></span>
<span class="line"><span style="color:#24292E;">	loadingType: </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">	customized: { color: </span><span style="color:#032F62;">&quot;#f4038a&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(Loading, {</span></span>
<span class="line"><span style="color:#E1E4E8;">	loadingType: </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	customized: { color: </span><span style="color:#9ECBFF;">&quot;red&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(Loading, {</span></span>
<span class="line"><span style="color:#24292E;">	loadingType: </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">	customized: { color: </span><span style="color:#032F62;">&quot;red&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(Loading, {</span></span>
<span class="line"><span style="color:#E1E4E8;">	loadingType: </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	customized: { color: </span><span style="color:#9ECBFF;">&quot;#212121&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(Loading, {</span></span>
<span class="line"><span style="color:#24292E;">	loadingType: </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">	customized: { color: </span><span style="color:#032F62;">&quot;#212121&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><br><p>如果是 ts 请在 global.d.ts 加入 类型</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue3-loading-plug&quot;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">module</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue3-loading-plug&quot;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>router</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hideLoading</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> app.config.globalProperties.$Loading?.hideLoading;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showLoading</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> app.config.globalProperties.$Loading?.</span><span style="color:#B392F0;">showLoading</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">router.</span><span style="color:#B392F0;">beforeEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">next</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (to.meta.loading) </span><span style="color:#B392F0;">showLoading</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">router.</span><span style="color:#B392F0;">afterEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (to.meta.loading) </span><span style="color:#B392F0;">hideLoading</span><span style="color:#E1E4E8;">()(</span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hideLoading</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> app.config.globalProperties.$Loading?.hideLoading;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showLoading</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> app.config.globalProperties.$Loading?.</span><span style="color:#6F42C1;">showLoading</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">beforeEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">to</span><span style="color:#24292E;">, </span><span style="color:#E36209;">from</span><span style="color:#24292E;">, </span><span style="color:#E36209;">next</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (to.meta.loading) </span><span style="color:#6F42C1;">showLoading</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">afterEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">to</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (to.meta.loading) </span><span style="color:#6F42C1;">hideLoading</span><span style="color:#24292E;">()(</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>scrvies</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hideLoading</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> app.config.globalProperties.$smallLoading.hideLoading;</span></span>
<span class="line highlighted"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showLoading</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	app.config.globalProperties.$smallLoading.</span><span style="color:#B392F0;">showLoading</span><span style="color:#E1E4E8;">();</span></span>
<span class="line highlighted"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onProgress</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> app.config.globalProperties.$smallLoading.onProgress;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 请求拦截器</span></span>
<span class="line"><span style="color:#E1E4E8;">service.interceptors.request.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">	(</span><span style="color:#FFAB70;">config</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 在发送请求之前做些什么？</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">showLoading</span><span style="color:#E1E4E8;">();</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">		config.</span><span style="color:#B392F0;">onDownloadProgress</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">progressEvent</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">			</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> percentCompleted </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">				(progressEvent.loaded </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> progressEvent?.total</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">			);</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">			</span><span style="color:#B392F0;">onProgress</span><span style="color:#E1E4E8;">()(percentCompleted);</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">		};</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> config;</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span>
<span class="line"><span style="color:#E1E4E8;">	(</span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 对请求错误做些什么？</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 第二个括号参数为空时，200ms后隐藏loading, (为了展示loading进度100%效果)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">hideLoading</span><span style="color:#E1E4E8;">()();</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#6A737D;">// hideLoading()(true); // 传入true时，不会延迟隐藏loading</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">reject</span><span style="color:#E1E4E8;">(error);</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 响应拦截器</span></span>
<span class="line"><span style="color:#E1E4E8;">service.interceptors.response.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">	(</span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 对响应数据做点什么？ 这里只返回成功响应数据！</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">hideLoading</span><span style="color:#E1E4E8;">()();</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> response.data;</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	(</span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hideLoading</span><span style="color:#E1E4E8;">()();</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hideLoading</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> app.config.globalProperties.$smallLoading.hideLoading;</span></span>
<span class="line highlighted"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showLoading</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">	app.config.globalProperties.$smallLoading.</span><span style="color:#6F42C1;">showLoading</span><span style="color:#24292E;">();</span></span>
<span class="line highlighted"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onProgress</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> app.config.globalProperties.$smallLoading.onProgress;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 请求拦截器</span></span>
<span class="line"><span style="color:#24292E;">service.interceptors.request.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">	(</span><span style="color:#E36209;">config</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 在发送请求之前做些什么？</span></span>
<span class="line highlighted"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">showLoading</span><span style="color:#24292E;">();</span></span>
<span class="line highlighted"><span style="color:#24292E;">		config.</span><span style="color:#6F42C1;">onDownloadProgress</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">progressEvent</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line highlighted"><span style="color:#24292E;">			</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> percentCompleted </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(</span></span>
<span class="line highlighted"><span style="color:#24292E;">				(progressEvent.loaded </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> progressEvent?.total</span></span>
<span class="line highlighted"><span style="color:#24292E;">			);</span></span>
<span class="line highlighted"><span style="color:#24292E;">			</span><span style="color:#6F42C1;">onProgress</span><span style="color:#24292E;">()(percentCompleted);</span></span>
<span class="line highlighted"><span style="color:#24292E;">		};</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> config;</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span>
<span class="line"><span style="color:#24292E;">	(</span><span style="color:#E36209;">error</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 对请求错误做些什么？</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 第二个括号参数为空时，200ms后隐藏loading, (为了展示loading进度100%效果)</span></span>
<span class="line highlighted"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">hideLoading</span><span style="color:#24292E;">()();</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6A737D;">// hideLoading()(true); // 传入true时，不会延迟隐藏loading</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(error);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 响应拦截器</span></span>
<span class="line"><span style="color:#24292E;">service.interceptors.response.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">	(</span><span style="color:#E36209;">response</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 对响应数据做点什么？ 这里只返回成功响应数据！</span></span>
<span class="line highlighted"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">hideLoading</span><span style="color:#24292E;">()();</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> response.data;</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span>
<span class="line highlighted"><span style="color:#24292E;">	(</span><span style="color:#E36209;">error</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hideLoading</span><span style="color:#24292E;">()();</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="💡-注意事项" tabindex="-1">💡 注意事项 <a class="header-anchor" href="#💡-注意事项" aria-label="Permalink to &quot;💡 注意事项&quot;">​</a></h2><blockquote><p>这个插件使用了动态导入（import(&#39;xx.vue&#39;)）和 Map 来提高性能，因此需要一个支持 这些特性的环境。如果你的环境不支持这些特性，你可能需要使用 polyfill 来提供这些 特性。</p></blockquote>`,36),d=[y];function g(u,h,b,m,F,v){return n(),a("div",null,d)}const k=s(E,[["render",g]]);export{q as __pageData,k as default};
